<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>boboland</display-name>
    <!-- log4j 配置  开始 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/classes/log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>600000</param-value>
    </context-param>
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>javass.webapp.root</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- log4j 配置  结束 -->
    
    <!-- oscache配置 -->
    <jsp-config>
    	<taglib>
			<taglib-uri>oscache</taglib-uri>
			<taglib-location>/WEB-INF/tld/oscache.tld</taglib-location>
		</taglib> 
	</jsp-config>
    <!-- oscache end -->
    
    <!-- 设置servlet编码开始 -->
    <filter>
        <filter-name>Set Character Encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>Set Character Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 设置servlet编码结束 -->
    
    <!-- 设置BackURL开始 -->    
    <filter>
        <filter-name>BackURLFilter</filter-name>
        <filter-class>cn.javass.common.web.filter.BackURLFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>BackURLFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 设置BackURL结束 -->    
    
    <!-- Spring配置文件开始  -->    
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:spring-config.xml
        </param-value>
    </context-param>

    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    
    <filter>
	       <filter-name>OpenSessionInViewFilter</filter-name>
	       <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
	        <filter-name>OpenSessionInViewFilter</filter-name>
	        <url-pattern>/*</url-pattern>
 	</filter-mapping>
    <!-- Spring配置文件结束 -->
    
    
            <filter>
          <filter-name>openSessionInViewFilter</filter-name>
          <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
        </filter>
        
    <!--如果 发现报 该错误 No mapping found for HTTP request with URI  加入下mapping
    <servlet-mapping>
        <servlet-name>jsp</servlet-name>
        <url-pattern>*.jsp</url-pattern>
    </servlet-mapping-->



    <!-- 浏览器不支持put,delete等method,由该filter将/blog?_method=delete转换为标准的http delete方法 -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <servlet-name>spring</servlet-name>
    </filter-mapping>

    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>/index</welcome-file>
    </welcome-file-list>


   <!--  <listener>  
      <listener-class>cn.javass.newfile.lucene.crawl.StartCrawlInternet</listener-class>   
 	</listener> -->
 	
 	<!-- 验证码 start -->

	<servlet>
		<servlet-name>Kaptcha</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
		<!-- 验证码一些参数 statr  -->
		<init-param> 
			<param-name>kaptcha.border</param-name> 
			<param-value>no</param-value> 
		</init-param>
		<init-param> 
			<param-name>kaptcha.image.heighte</param-name> 
			<param-value>25</param-value> 
		</init-param>
		<init-param> 
			<param-name>kaptcha.image.width</param-name> 
			<param-value>100</param-value> 
		</init-param>
		<init-param> 
			<param-name>kaptcha.textproducer.font.size</param-name> 
			<param-value>25</param-value> 
		</init-param>
		
		
		<init-param>
			<param-name>kaptcha.obscurificator.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.ShadowGimpy</param-value>
		</init-param>
		
		<init-param>
            <param-name>kaptcha.noise.impl</param-name>
            <param-value>com.google.code.kaptcha.impl.NoNoise</param-value>
        </init-param>

		
		<!-- 验证码一些参数 -end -->
	</servlet>
	<servlet-mapping>
		<servlet-name>Kaptcha</servlet-name>
		<url-pattern>/kaptcha.jpg</url-pattern>
	</servlet-mapping>
	<!-- 验证码 end -->
	
</web-app>
